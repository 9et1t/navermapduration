#include <ESP8266HTTPClient.h>
#include <ESP8266WiFi.h>

const char* ssid     = "UNICORN";
const char* password = "1204760!";
String host = "http://192.168.0.100";

 
const long interval = 5000;
unsigned long previousMillis = 0;
 
WiFiServer server(80);
WiFiClient client;
HTTPClient http;

 
void setup() {
  
  
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connecting to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
  server.begin();
  Serial.println("Server started");


}
 
void loop() {
  // 센서값 DB 전송 부분
  unsigned long currentMillis = millis();
  if(currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
      float x = desX();
float y = desY();
float id = f_id();
 String phpHost = host+"/desxy.php?c="+String(id)+"&b="+String(x)+"&a="+String(y);
 
    Serial.print("Connect to ");
  //Serial.println(phpHost);
    
http.begin(client, phpHost);
    http.setTimeout(3000);
    int httpCode = http.GET();
   
    if(httpCode > 0) {
      //Serial.printf("GET code : %d\n\n", httpCode);
 
      if(httpCode == HTTP_CODE_OK) {
        String payload = http.getString();
        Serial.println(payload);
      }
    } 
    else {
      Serial.printf("GET failed, error: %s\n", http.errorToString(httpCode).c_str());
    }
    http.end();
  }
  
  // 웹서버 부분
  client = server.available();
  if(!client) return;
 
  Serial.println("새로운 클라이언트");
  client.setTimeout(5000);
 
  String request = client.readStringUntil('\r');
  Serial.println("request: ");
  Serial.println(request);
 
  while(client.available()) {
    Serial.println(client.read());
  }
float x =  desX();
float y =  desY();
float id = f_id();    

  client.print("HTTP/1.1 200 OK");
  client.print("Content-Type: text/html\r\n\r\n");
  client.print("<!DOCTYPE HTML>");
  client.print("<html>");
  client.print("<head>"); 
  client.print("<meta charset=\"UTF-8\" http-equiv=\"refresh\" content=\"1\">");
  client.print("<title>desX,desY Webpage</title>");
  client.print("</head>");
  client.print("<body>");
  client.print("<h2>Destination</h2>");
  client.print("<br>");
    client.print("id : ");
    client.print((String)id);
  client.print("<br>");
  client.print("x: ");
  client.print((String)x);
  client.print("<br>");
  client.print("y : ");
    client.print((String)y);
  client.print("</body>");
  client.print("</html>");
 
  Serial.println("클라이언트 연결 해제");
  delay(3000);
}

float  desX()
{
  //DX=Serial1.read();
  //substirg
  //return dx
  return 32.123;
}
float desY()
{
  //DY=Serial1.read();
  //substirg
  //return dy
  return 127.123;
}

float f_id()
{
    //Id=Serial1.read();
  //substirg
  //return Id
  return 111;
}
